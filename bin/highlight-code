#!/usr/bin/env ruby#ENV['BUNDLE_GEMFILE'] ||= File.expand_path("../../Gemfile",  Pathname.new(__FILE__).realpath)require 'optparse'require 'rubygems'require 'bundler/setup'$:.unshift File.dirname(__FILE__) + "/../lib"require 'highlight-code.rb'options = {}opt_parser = OptionParser.new do |opt|  opt.banner = "Usage: highlight-code XHTMLFILEPATH [OPTIONS]"  opt.separator  ""  opt.separator  "XHTMLFILEPATH: The .xhtml file containing the code to highlight"  opt.separator  ""  opt.separator  "Options"   opt.on("-c","--css-path PATH/TO/CSS/FILES","path for the coderay.css (default same location as the input file)") do | csspath |    options[:csspath] = csspath  end   opt.on("-e","--extension EXTENSION","extension for the processed / output file (default: .highlighted.xhtml)") do | extension |    options[:extension] = extension  end  opt.on("-t","--tag TAG","type of tag (pre or code) containing the code to highlight (note: the css class must follow the syntax: brush: language, e.g. brush: ruby) (default: both)") do | tag |    options[:tag] = tag  end  opt.on("-h","--help","help") do    puts opt_parser	exit  endendopt_parser.parse!puts opt_parser if ARGV.empty?file_path = ARGV[0]if File.exist? file_path	puts "... processing file: #{ARGV} with options: #{options.inspect} ..."	ch  = CodeHighlighter.highlight file_path, options	puts 	chelse	opt_parser.parse!	puts ""	puts "File #{file_path} could not be found"	nullend